#summary XML data model for EFL/ESL learning interaction data
#labels Featured

<wiki:toc max_depth="3" />

----

== Introduction ==

The SWF Activity Module allows Flash e-learning applications to load learning interaction data specified by a URL passed in via FlashVars. This page is the specification for a standardised XML data model tree structure so that learning interaction data can be shared (interoperable) between different Flash e-learning applications.

----

== Examples of typical EFL/ESL activities ==

=== Simple multiple choice ===

*Instructions:* Read/Listen/Look and select the correct answer. Example:

*Question:* Which animal is the biggest?

`[photo of a cat]`
`[photo of a dog]`
`[photo of a mouse]`
`[photo of an elephant]`

*Answer:* `[photo of a elephant]`

This requires:
{{{
<node>
    <question>
        <audio>animals/mp3/which_animal_is_the_biggest.mp3</audio>
        <text>Which animal is the biggest?</text>
    </question>
    <correct>
        <image>animals/pix/elephant.jpg</image>
    </correct>
    <wrong>
        <image>animals/pix/cat.jpg</image>
        <image>animals/pix/dog.jpg</image>
        <image>animals/pix/mouse.jpg</image>
    </wrong>
</node>
}}}

----

=== Gap-fills ===

*Instructions:* Complete the sentence with the word given in the correct tense. Here is an example:

*Keyword:* learn

David `___________________` to speak Chinese for the last eight months.

*Answer:* 's/has been learning

This question awards one mark. It's a straightforward match between user input and any of the given answers.

This requires:
{{{
<node>
    <keyword>learn</keyword>
    <beg>David</beg>
    <mid1>'s been learning</mid1>
    <mid1>has been learning</mid1>
    <end>to speak Chinese for the last eight months.</end>
</node>
}}}

----

=== Keyword sentence transformations ===

*Instructions:* Complete the second sentence so that it has a similar meaning to the first
sentence, using the word given. Do not change the word given. You must use between three and six words, including the word given. Here is an example:

*Model:* Would you mind helping me carry this heavy box to the car?

*Keyword:* grateful

This box is really heavy so I'd `__________________________` help me carry it to the car.

*Answer:* be (very) grateful if | you would / could / 'd

The question awards 2 marks, one for each half of the answer provided so it's a little different to regular gap-fill questions. There are also often multiple possible answers to each half. So the possible answers would be:

  * be grateful if
  * be very grateful if

  * you would
  * you could
  * you'd

This requires:
{{{
<node>
    <model>Would you mind helping me carry this heavy box to the car?</model>
    <keyword>grateful</keyword>
    <beg>This box is really heavy so I'd</beg>
    <mid1>be grateful if</mid1>
    <mid1>be very grateful if</mid1>
    <mid2>you would</mid2>
    <mid2>you could</mid2>
    <mid2>you'd</mid2>
    <end>I'd help me carry it to the car.</end>
</node>
}}}

----

== Example XML file tree structure ==

{{{
<?xml version="1.0" encoding="utf-8"?>
<swfmoddata>
	<metadata>
		<courseid>9</courseid>
		<coursename>Elementary 101</coursename>
		<name>Title of learning interaction</name>
		<intro>A brief description of learning interaction</intro>
		<author>Matt Bury</author>
		<email>matbury-at-gmail-dot-com</email>
		<skype>matt.bury</skype>
		<datecreated>20091128</datecreated>
		<datemodified>20091128</datemodified>
	</metadata>
	<interaction>
		<node>
			<question>
				<audio>interaction_name/mp3/question_01.mp3</audio>
				<stretched>interaction_name/mp3/question_01_str.mp3</stretched>
				<text>Is this a question?</text>
				<image>interaction_name/pix/question_01.jpg</image>
			</question>
			<answer>
				<audio>interaction_name/mp3/answer_01.mp3</audio>
				<stretched>interaction_name/mp3/answer_01.mp3</stretched>
				<text>Yes, it is. Isn't that wierd?</text>
				<image>interaction_name/mp3/answer_01.mp3</image>
			</answer>
			<gapfill>
				<beg>The beginning of this sentence</beg>
				<mid>is followed by the middle</mid>
				<end>and then the end.</end>
			</gapfill>
			<correct>
				<audio>interaction_name/mp3/correct_option_01.mp3</audio>
				<audio>interaction_name/mp3/correct_option_02.mp3</audio>
				<stretched>interaction_name/mp3/correct_option_01_str.mp3</stretched>
				<stretched>interaction_name/mp3/correct_option_02_str.mp3</stretched>
				<stretched>interaction_name/mp3/correct_option_03_str.mp3</stretched>
				<text>This is correct option 1</text>
				<text>This is correct option 2</text>
				<text>This is correct option 3</text>
				<image>interaction_name/pix/correct_option_01.jpg</image>
				<image>interaction_name/pix/correct_option_02.jpg</image>
				<image>interaction_name/pix/correct_option_03.jpg</image>
			</correct>
			<wrong>
				<audio>interaction_name/mp3/wrong_option_01.mp3</audio>
				<audio>interaction_name/mp3/wrong_option_02.mp3</audio>
				<audio>interaction_name/mp3/wrong_option_03.mp3</audio>
				<stretched>interaction_name/mp3/wrong_option_01_str.mp3</stretched>
				<stretched>interaction_name/mp3/wrong_option_02_str.mp3</stretched>
				<stretched>interaction_name/mp3/wrong_option_03_str.mp3</stretched>
				<text>This is wrong option 1</text>
				<text>This is wrong option 2</text>
				<text>This is wrong option 3</text>
				<image>interaction_name/pix/wrong_option_01.jpg</image>
				<image>interaction_name/pix/wrong_option_02.jpg</image>
				<image>interaction_name/pix/wrong_option_03.jpg</image>
			</wrong>
			<keyword>one</keyword>
			<keyword>two</keyword>
			<keyword>three</keyword>
			<speaker>Mr. Smith</speaker>
			<video>
				<source>flv/fluffy_hamster_01.flv</source>
				<text><![CDATA[<a href="http://example.com/docs/cdata.html">Any kind of text data is supported here.</a>]]></text>
				<captions>xml/fluffy_hamster_01_subtitles.xml</captions>
			</video>
		</node>
	</interaction>
</swfmoddata>
}}}